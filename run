#!/bin/bash
#Color
y='\033[1;33m' #yellow
BGX="\033[42m"
c="\033[96m" #biruterang
z="\033[96m"
p="\033[1;95m" #ungu
DF='\e[39m'
Bold='\e[1m'
Blink='\e[5m'
yell='\e[33m'
RED='\033[0;31m'
green='\e[32m'
PURPLE='\e[35m'
cyan='\e[36m'
LRED='\e[91m'
Lgreen='\e[92m'
Lyellow='\e[93m'
NC='\e[0m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
LIGHT='\033[0;37m'
grenbo="\e[92;1m"
blue="\033[0;34m"
Blue="\033[36m"
clear
MYIP=$(curl -sS ipv4.icanhazip.com)
echo ""
#########################
# USERNAME
rm -f /usr/bin/user
# USERNAME
rm -f /usr/bin/user
username=$(curl https://raw.githubusercontent.com/SETANTAZVPN/izinvps/ipuk/ip | grep $MYIP | awk '{print $2}')
#username=$(curl https://abc.xcodehoster.com/izin | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
# validity
rm -f /usr/bin/e
valid=$(curl https://raw.githubusercontent.com/SETANTAZVPN/izinvps/ipuk/ip | grep $MYIP | awk '{print $3}')
#valid=$(curl https://abc.xcodehoster.com/izin | grep $MYIP | awk '{print $3}')
echo "$valid" >/usr/bin/e
# DETAIL ORDER
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
clear
# CERTIFICATE STATUS
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
# VPS Information
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
}
mai="datediff "$Exp" "$DATE""

# Status ExpiRED Active | Geo Project
Info="(${green}Active${NC})"
Error="(${RED}ExpiRED${NC})"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl https://raw.githubusercontent.com/SETANTAZVPN/izinvps/ipuk/ip | grep $MYIP | awk '{print $3}')
#Exp1=$(curl https://abc.xcodehoster.com/izin | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Error}"
fi
echo -e "\e[32mloading...\e[0m"
clear

# // System Information
domain=$(cat /etc/xray/domain)
WKT=$(curl -s ipinfo.io/timezone)
IPVPS=$(curl -s ipv4.icanhazip.com)
tram=$(free -m | awk 'NR==2 {print $2}')
swap=$(free -m | awk 'NR==4 {print $2}')
freq=$(awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo)
cores=$(awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo)
cname=$(awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo)
knr=$( uname -r )

# // Exporting IP Address
export IP=$( curl -s https://ipinfo.io/ip/ )
# // SSH
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
openvpn_service="$(systemctl show openvpn.service --no-page)"
oovpn=$(echo "${openvpn_service}" | grep 'ActiveState=' | cut -f2 -d=)
dropbear_status=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
fail2ban_service=$(/etc/init.d/fail2ban status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
cron_service=$(/etc/init.d/cron status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
udp1_service=$(systemctl status udp-mini-1 | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
udp2_service=$(systemctl status udp-mini-2 | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
udp3_service=$(systemctl status udp-mini-3 | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
Iptables=$(systemctl status netfilter-persistent | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
RClocal=$(systemctl status rc-local | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Autorebot=$(systemctl status rc-local | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
UdpSSH=$(systemctl status udp-custom | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')

openssh=$( systemctl status ssh | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $openssh == "running" ]]; then
    status_openssh="${GREEN}Online$NC${c} │$NC"
else
    status_openssh="${RED}Offline${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${GREEN}Online$NC${c} │$NC"
else
    status_ws_epro="${RED}Offline${NC} "
fi

# // Trojan Proxy
ss=$( systemctl status xray | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ss == "running" ]]; then
    status_ss="${GREEN}Online$NC${c} │$NC"
else
    status_ss="${RED}Offline${NC} "
fi

# // NGINX
nginx=$( systemctl status nginx | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $nginx == "running" ]]; then
    status_nginx="${GREEN}Online$NC${c} │$NC"
else
    status_nginx="${RED}Offline${NC} "
fi

# STATUS SERVICE IPTABLES
if [[ $Iptables == "exited" ]]; then
    status_galo="${GREEN}Online$NC${c} │$NC"
else
    status_galo="${RED}Offline${NC}"
fi

# STATUS SERVICE  SSH 
if [[ $ssh_service == "running" ]]; then 
   status_ssh="${GREEN}Online$NC${c} │$NC"
else
   status_ssh="${RED}Offline${NC} "
fi

# STATUS OHP SSH
#if [[ $ohr == "running" ]]; then 
 #  sohr="${GREEN}Online${NC}${NC}"
#else
 #  sohr="${RED}Offline${NC} ${NC}"
#fi

# STATUS SERVICE OPENVPN
if [[ $oovpn == "active" ]]; then
  status_openvpn="${GREEN}Online$NC${c} │$NC"
else
  status_openvpn="${RED}Offline${NC} "
fi

# STATUS SERVICE DROPBEAR
if [[ $dropbear_status == "running" ]]; then 
   status_beruangjatuh="${GREEN}Online$NC${c} │$NC"
else
   status_beruangjatuh="${RED}Offline${NC} ${NC}"
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="${GREEN}Online$NC${c} │$NC"
else
   status_haproxy="${RED}Offline${NC} "
fi

# STATUS SERVICE  SQUID 
#if [[ $squid_service == "running" ]]; then 
  # status_squid="${GREEN}Online${NC} ( No Etror )"
#else
  # status_squid="${RED}Offline${NC} "
#fi

# STATUS SERVICE  FAIL2BAN 
if [[ $fail2ban_service == "running" ]]; then 
   status_fail2ban="${GREEN}Online$NC${c} │$NC"
else
   status_fail2ban="${RED}Offline${NC} "
fi

# STATUS SERVICE  CRONS 
if [[ $cron_service == "running" ]]; then 
   status_cron="${GREEN}Online$NC${c} │$NC"
else
   status_cron="${RED}Offline${NC} "
fi

# STATUS SERVICE  BADVPN 1
if [[ $udp1_service == "running" ]]; then 
   status_udp1="${GREEN}Online$NC${c} │$NC"
else
   status_udp1="${RED}Offline${NC} "
fi

# STATUS SERVICE  BADVPN 2
if [[ $udp2_service == "running" ]]; then 
   status_udp2="${GREEN}Online$NC${c} │$NC"
else
   status_udp2="${RED}Offline${NC} "
fi

# STATUS SERVICE  BADVPN 3
if [[ $udp3_service == "running" ]]; then 
   status_udp3="${GREEN}Online$NC${c} │$NC"
else
   status_udp3="${RED}Offline${NC} "
fi

if [[ $RClocal == "exited" ]]; then
    status_galoo="${GREEN}Online$NC${c} │$NC"
else
    status_galoo="${RED}Offline${NC}"
fi

if [[ $Autorebot == "exited" ]]; then
    status_galooo="${GREEN}Online$NC${c} │$NC"
else
    status_galooo="${RED}Offline${NC}"
fi

# STATUS SERVICE  SSH UDP 
if [[ $UdpSSH == "running" ]]; then 
   status_udp="${GREEN}Online$NC${c} │$NC"
else
   status_udp="${RED}Offline${NC} "
fi

# // Running Function 
clear
echo -e " ${c}╭════════════════════════════════════════════╮$NC"
echo -e " ${c}│$NC$NC\033[41m              System Information            $NC${c}│$NC"
echo -e " ${c}╰════════════════════════════════════════════╯$NC"
echo -e " ${c}╭════════════════════════════════════════════╮$NC"
echo -e " ${c}│$NC$y Operating System$NC  $blue=$NC$yellow $(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')$NC"
echo -e " ${c}│$NC$y IP Server$NC         $blue=$NC$yellow $IPVPS$NC"
echo -e " ${c}│$NC$y Domain$NC            $blue=$NC$yellow $(cat /etc/xray/domain)$NC"
echo -e " ${c}│$NC$y Client Name$NC       $blue=$NC$yellow $username"	
echo -e " ${c}│$NC$y Exp Script$NC        $blue=$green $certifacate ${NC}days"
echo -e " ${c}╰════════════════════════════════════════════╯$NC"
echo -e " ${c}╭════════════════════════════════════════════╮$NC"
echo -e " ${c}│$NC$NC\033[41m              Service Information           $NC${c}│$NC"
echo -e " ${c}╰════════════════════════════════════════════╯$NC"
echo -e " ${c}╭════════════════════════════════════════════╮$NC"
echo -e " ${c}│$NC ${p}Service SSH / TUN                $NC $blue=$NC $status_ssh"
echo -e " ${c}│$NC ${p}Service OpenVPN                  $NC $blue=$NC $status_openvpn"
echo -e " ${c}│$NC ${p}Service WS ePRO                  $NC $blue=$NC $status_ws_epro"
echo -e " ${c}│$NC ${p}Service Dropbear                 $NC $blue=$NC $status_beruangjatuh"
echo -e " ${c}│$NC ${p}Service Haproxy                  $NC $blue=$NC $status_haproxy"
echo -e " ${c}│$NC ${p}Service Fail2Ban                 $NC $blue=$NC $status_fail2ban"
echo -e " ${c}│$NC ${p}Service Crons                    $NC $blue=$NC $status_fail2ban"
echo -e " ${c}│$NC ${p}Service Nginx Webserver          $NC $blue=$NC $status_nginx"
echo -e " ${c}│$NC ${p}Service Xray Vmess WS TLS        $NC $blue=$NC $status_ss"
echo -e " ${c}│$NC ${p}Service Xray Vmess WS Non TLS    $NC $blue=$NC $status_ss"
echo -e " ${c}│$NC ${p}Service Xray Vmess gRPC          $NC $blue=$NC $status_ss"
echo -e " ${c}│$NC ${p}Service Xray Vless WS TLS        $NC $blue=$NC $status_ss"
echo -e " ${c}│$NC ${p}Service Xray Vless WS Non TLS    $NC $blue=$NC $status_ss"
echo -e " ${c}│$NC ${p}Service Xray Vless gRPC          $NC $blue=$NC $status_ss"
echo -e " ${c}│$NC ${p}Service Xray Trojan WS           $NC $blue=$NC $status_ss"
echo -e " ${c}│$NC ${p}Service Xray Trojan gRPC         $NC $blue=$NC $status_ss"
echo -e " ${c}│$NC ${p}Service Xray Shadowsocks WS      $NC $blue=$NC $status_ss"
echo -e " ${c}│$NC ${p}Service Xray Shadowsocks gRPC    $NC $blue=$NC $status_ss"
echo -e " ${c}│$NC ${p}Service Iptables                 $NC $blue=$NC $status_galo"
echo -e " ${c}│$NC ${p}Service RClocal                  $NC $blue=$NC $status_galoo"
echo -e " ${c}│$NC ${p}Service Autoreboot               $NC $blue=$NC $status_galooo"
echo -e " ${c}╰════════════════════════════════════════════╯$NC"
echo -e " ${c}╭════════════════════════════════════════════╮$NC"
echo -e " ${c}│$NC$NC\033[41m             CONTACT SUPPORT / CS           $NC${c}│$NC"
echo -e " ${c}╰════════════════════════════════════════════╯$NC"
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
menu
#!/bin/bash

Tele="@Funy_vpn";krF=FoL;Gnr=Vl;QIy=Is;UOt=FC;kVE=Sk;KlM=gM;Xwe=TF;oTX=dD;Yox=Qa;wQx=mb;Kqb=Zy;xWU=twB;gTp=auw;hwZ=Ejp;tHg=iQZ;ojo=shb;jhw=FjF;IDL=klV;wOA=yFT;PZL=XfL;DRJ=DiE;bmJ=FCa;XGN=dOT;QCK=dkY;SOb=WJE;RJx=uAv;czJ=dts;VGB=oCy;TyO=xGj;yHU=bpq;Nfb=Wct;doQ=Ibf;XCL=rax;ZNH=Hhf;Eoh=yCU;ghd=hut;ooz=VKY;qMf=PrY;Ecf=Lke;BbJ=jie;QOI=lOT;oi=QkU;yM=iDO;rT=twI;wa=BEk;Lf=SGl;Sx=Kri;yL=RiF;Xf=iZT;iv=fpC;fW=nki;qX=FrL;ba=OUY;czP=Hdm;ecN=WKt;QMW=BnB;Nsq=jdC;nof=OZt;bhx=qNV;vVN=xaU;smp=Wta;ceY=GDh;AIB=juO;miA=Cso;zgz=Hka;Kea=YMq;hUp=SWY;zMP=ozk;WGK=JEt;pkF=jjF;FCq=pFs;ZrQ=VcQ;ZjS=do;BTP=Su;sly=xM;aZl=vF;iJn=bo;QCl=HB;SCO=xo;fUq=Jo;Epq=zc;wxq=Ev;ziJ=Gx;Kzo=JF;PDO=pJ;qhq=yp;OYk=rj;OGy=Cc;hSK=xR;lnD=um;UXi=pl;xBF=xP;qOD=iX;RVy=nl;mqe=JK;rQt=CA;qJD=FR;sPp=XZ;moh=DC;Fsj=GWh;NTx=Jnx;dwG=ncr;Ugd=mFV;ZTt=WjI;mFG=lms;YGK=bPI;UKs=ibv;hka=JFE;zpQ=Gxt;VlF=Jxk;AEJ=cuk;SUZ=YiV;Wfq=NhZ;xLp=ray;QmE=mqM;fkp=tHl;Sek=XvT;qbj=EKu;RfA=xSe;fPQ=Oll;cif=jtg;GYE=yei;Prw=RTD;sMB=pEL;sxA=APb;aRs=HgZ;SXm=VSI;lZA=UKc;YMw=Lct;bwO=XQI;OxQ=COX;bPh=KqP;GVr=hRx;eoA=eID;AZK=fFj;PGC=XPy;ieV=gly;AUO=yit;GjW=jaZ;tBB=HSO;vdV=efl;HiW=VHx;JaQ=RCo;cGr=fsk;eib=jty;TPK=rlb;dhM=oDt;tCL=muK;gAg=xQq;xWl=eMt;AtB=mbQ;UzS=lee;xjU=CPZ;qLS=iIg;dQw=NHN;Dum=qAc;aei=Whw;afz=OcR;NWZ=Txs;gzI=HsZ;YmH=IIm;kZc=Ppd;qnZ=vjw;sQw=BmF;PAB=rGe;gah=aHu;XfD=uJJ;LmJ=PUK;jCz=XpN;gTg=hRF;cpS=fhx;wFI=fih;pHM=aTH;GIm=Jtb;XDy=XGY;zMs=kPd;VtP=pbP;ALj=acU;HEZ=Tre;EPr=vOf;eSC=AIk;TXH=szR;nNa=bGD;lQt=Qod;Qvm=HGI;tkS=IOY;qmZ=tDf;xxx=xOS;pFg=XCd;aVR=xGh;ooR=AHX;JVj=laY;TvM=kEx;SYU=hol;ddj=khS;aPP=oiI;Edo="
";DSi=WYX;LHA=Gfx;VgU=gJZ;Rxh=xYy;bXG=gvs;eLoP="e";u18="6";Yt="l";Yxgs="";qwt="Fu";ieC=HO;XcH=Rv;Ugs=LC;vD=xp;fy=oW;Zl=LhH;oP=Jm;sDA=kpY;GHn=TB;wzk=Da;oiO=Ei;NaM=hIf;fC=vjz;kT=rz;sV=bZz;CL=ARL;Wc=dA;gZG=tGI;vpk=cM;Aao=tgy;sU=ld;LZ=Pr;BE=wCX;iN=fQ;RCe=Dm;Rc=Fl;Njo=OMq;gtb=SKa;Wf=jMB;Dm=wHr;Nx=Wn;ANT=jAK;oFy=Bnc;IjZ=Xj;DQa=oK;ewZ=Vm;QPf=lz;Cwg=aS;KEM=jS;fkE=hM;nLw=ym;FWv=BC;aDC=Lw;tW=Rgn;kw=Hgf;tQ=eSh;Fi=iGb;Or=snM;ZG=xqx;xC=WJr;Bf=haC;pT=THr;By=jbu;tm=Hcy;eT=nTC;UT=KCa;dk=Pxy;vG=TvX;HX=MMB;Ow=ZoT;UJ=LvE;rx=oMF;EB=VZx;OC=IfU;dv=lTx;Nk=TNq;Ej=bKu;dl=ZZi;yzL=bJ;EiG=LJ;iqg=gK;fbd=vg;OPl=Ei;tnI=YS;yBV=DA;yxh=Ks;Nic=Ih;wMq=tD;iDs=AQ;Nhh=zy;JWe=Ry;gC=AnI;qWN=uq;hIc=OAL;UOm=Nq;Xj=ax;GW=utn;Fmc=CaI;zeK=eT;hI=sl;Ae=RK;XV=doy;Dpq=Eg;Mmr=MZg;CXd=Bao;RND=WUC;CGm=SRK;DJh=LZw;ym=Ah;xzv=IX;FYi=YUX;v6T=" ";RzE="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 jogbpFWbvR2Yz9SehJHevMGdl9CI+AiIwBHJiAyboNWZJMiCulWYt9GZjN3L092by9CI+AiIwBHJ vkXYyJjdvMGdl9CI+AiIwBHJiAyboNWZJMiCulWYt9GZvkXYyh3LjRXZvAiPgICcwRiIg8GajVWC +AiIwBHJ9AVSiAyboNWZgACIgACIgMCIK4Wah12bk9Cdv9mcvAiPgAHckAyboNWZJMiCulWYt9GZ zADXlRXaodHJiASZtAyboNWZKACIgAiCpZGIgMCIgogZu92YuMHc2BXavEkSJN1LilGbvIXY29CI UKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOjUKeb0MzOws1M UKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOgUKOg gACIgACIgACIgACIgACIgACIgICIl1CIvh2YlpgI9NkT7RCkUKOgUKOgUKOgUKOgUKOgUKOgUKOg 0lGa3RiIgUWLg8GajVmCiACIgACIgACIgACIgI7hiDiTJFUTPREIMxUQUNlTJBSsHKOIgACIgACI iDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliTJli3GNzsDMbNzMwwVZ iDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIliDIl pJ3YTBibpFWbvREIlNXVg4SMiAyboNWZKISfD50ekgJliDIliDIliDIliDIliDIliDIliDIliDIl 0FmdpJHUgU2cVBiLyICIvh2YlpgIyADI0BXayN2Ug4Wah12bEBSZzVFIuIjIg8GajVmCiEDMgQHc ASp4ASp4ASp4ASp4ASp4ASp4USp4tRzM7AzWzMDMcVGdph2dkICIl1CIvh2YlpgIg4Wah12bEBSZ ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4 i03QOtHJYSp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4ASp4 gICI6AibvlGdhxGbhR3culEIulWYt9GRgIXdvlFIlN3bvh2QiACcy1CIkFWZypgIiUWLg8GajVmC uY2YvQ3bvJ3Lg8ULgEXLgQXZndnCyFWZsNmCuVGa0ByOxAScl1CIt9GZkACdzVGdgYWaKoAIt9GZ ulWYt9CN29iTQZlWBRlTBRVRT9SbvNmL05WZ052bjJXZzVnY1hGdpdmL3Fmcv8iOzBHd0hmIgg2c yAScl1CIt9GZkACdzVGdgYWasVmCoNnLmN2LuoAaz5iZj9Cdv9mcvACerACZv1GajpgIoNnLmN2L u92YyV2c1JWdoRXan5ydhJ3LvozcwRHdoJCIoNnLxY2YvQ3bvJ3Lg8ULgEXLgQXZndnCuVGa0ByO z5SMmN2L092by9CI4tCIk9WboNmCig2cuEjZj9ibpFWbvQjdv4EUWpVQU5UQUV0Uv02bj5CduVGd vh0LulWYt9GRiACcy1CIkFWZypgblhGdgszMgEXZtASbvRGJgQ3clRHImlGblpAaz5SMmN2LuoAa m52bj5ycwZHcp9SQKl0UvIWas9ichZ3Lg4jPgICdz9Gak0DUJJCIvh2YlpAdz9GagUWLgICI6Q3c vRUfOVURSd0ekICIl1CIvh2YlpQampAIK4Wah12bk9SehJHevMGdl9CI+4DIiQ3cvhGJ9AVSiAiC vEkSJN1LilGbvIXY29CI+4DIiQ3cvhGJ9AVSiAyboNWZKIXYlx2YKIDIwVWZsNnCi03QOtHJhUmb j5ycwZHcp9SblJHctoncjN3LilGbvIXY29CI+4DIiQ3cvhGJ9AVSiAyboNWZjogZu92YuMHc2BXa pNiCgACIgogCyACclVGbzpgCyFWZsN2IK4Wah12bk9Cdv9mcvAiP+AiI0N3boRiIg8GajVmCm52b UKegUKegUKegUKegUKegUKegUKegUKegUKebzMzWlxlIgUWLg8GajVmCuBndvBCazNHIsxWY0Nnb UKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKeg hR3culEIgACIgAiblVmcnRiIgUWLg8GajVmCi0GMbNzMwwVgUKegUKegUKegUKegUKegUKegUKeg UKegUKegUKegUKebzMzWlxlIgUWLg8GajVmCiMkTkACIgACIgACIgACIgACIgM1Vg8CIIN1UgwGb UKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKeg lx2YKEDIwVWZsNnCi0GMbNzMwwVgUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKeg vQjdv4EUWpVQU5UQUV0Uv02bj5CduVGdu92YyV2c1JWdoRXan5ydhJ3LvozcwRHdoBCdld2dKIXY z5ibwZXLoN3cv4CImYCIoNnLuBndtg2czBCerACZv1GajBiJmACaz5ibwZXLoN3cvg2cz9ibpFWb BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4tNzMbVGXiASZtAyboNWZKkXYyhFIsFGdz5WSjoAa BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4 ulEIgACIgACIgACIuVWZydGJiASZtAyboNWZKISbws1MzADXBSp4BSp4BSp4BSp4BSp4BSp4BSp4 iHIliHIliHIliHIli32MzsVZcJCIl1CIvh2YlpgID5EJgACIgACIgACIgACIgASWBJFWgwGbhR3c iHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIl yFWZsNmCxACclVGbzpgItBzWzMDMcFIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIl h12L0Y3LOBlVaFEVOFEVFN1Lt92YuQnblRnbvNmclNXdiVHa0l2ZucXYy9yL6MHc0RHagQXZndnC 5Fmc41ycul2LuAiJmACaz5SehJHetMnbpBCerACZv1GajBiJmACaz5SehJHetMnbp9SehJHev4Wa 0Y3LOBlVaFEVOFEVFN1Lt92YuQnblRnbvNmclNXdiVHa0l2ZucXYy9yL6MHc0RHagQXZndnCoNnL 3h2cz5Wav4CImYCIoNnLzdHazNnbpBCerACZv1GajBiJmACaz5yc3h2cz5WavM3doN3Uv4Wah12L mpQZu9GbjJFIn5WYzFGUgMyIjoAIuBndvBCazNHIl52bsNGIjJHIn5WYzFGcjogchVGbjpAaz5yc 2JXZzBCc1t2YhJGIn5WYzFWbl1kIgU2ZkVnagACIgowegkCKwV3ajFmYfdmbhNXYwBibvlGdj5Wd w9mck9mbhRnch9SbvNmL05WZ052bjJXZzVnY1hGdpdmL3Fmcv8iOzBHd0hGI0V2Z3BCIgAiCiIXZ 0V2cv4CImYCIoNnLyJWL0V2cgg3KgQ2bth2YgAiJmACaz5ici1CdlN3LwV3ajFmYv4Wah12L0Y3L KIiclZnclNHIwV3ajFmYiAyczV2YjV3cfRnbpJHcgACIgoQMm4jMgwGb152L2VGZv4DIoNnLyJWL UKegUKegUKegUKegUKegUKegUKegUKebzMzWlxlIgUWLg8GajVmCz5GZ39GbzBCbhR3cul0IKoQf UKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKeg gACIgACIgAiblVmcnRiIgUWLg8GajVmCi0GMbNzMwwVgUKegUKegUKegUKegUKegUKegUKegUKeg UKegUKegUKebzMzWlxlIgUWLg8GajVmCiMkTkACIgACIgACIgACIgACIT5ERMNFIsxWY0NnbJBCI UKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKeg KIDIwVWZsNnCi0GMbNzMwwVgUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKegUKeg vRXdB9ibwZXek5WQv02bj5CduVGdu92YyV2c1JWdoRXan5ydhJ3LvozcwRHdoBCdld2dKIXYlx2Y oNnLz5GZ39Gbz9ibpFWbtMnbkd3bsNXLoN3ctQHcpJ3Yz9Gd1F2LulWYt9Sa6FWL5JWL0BXayN2c kVHIsFGdz5WSjogCyFWZsNmCoNnLz5GZ39Gbz9iLgYiJgg2cuMnbkd3bsNHI4tCIk9WboNGImYCI iHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIli32MzsVZcJCIl1CIvh2YlpAc iHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIliHIl gACIgAFRVBCbsFGdz5WSgACIgACIgACIg4WZlJ3ZkICIl1CIvh2YlpgItBzWzMDMcFIliHIliHIl BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4tNzMbVGXiASZtAyboNWZKIyQORCIgACIgACIgACI BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4BSp4 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 ==gC092biVmcKICdv9mYlJHIvRHIyVGduVGIzNXZyBlIgAXLgIXLgMXL";Mll="ch";HTv=Yyu;cbY=cId;FwM=nUK;Neo=URi;Jrd=ZsO;ZzZ=gsI;AGg=Krt;KoC=Usx;ftb=Vzm;kuT=EVS;AUX=NGv;Aow=suL;uBc=hlq;OqT=ApZ;kSe=ZTL;aFt=FKz;yqF=lEj;ZII=uml;BwC=JPx;gWH=eyv;wWA=hWw;unn=Brn;hxs=DiR;nPo=iOr;Uuo=lUG;zxW=Nkd;MAi=aWZ;XcA=xIq;sZL=MLV;rwV=lNF;GYU=UPS;WeS=kTk;Aym=btt;rGW=IDI;Uhx=DhE;Kut=fsH;eGn=UyX;VNh=YtK;QWo=gEO;Byf=nvi;Ezb=oBV;uWP=JEl;Vsp=Lgc;EAF=Byk;PSz=HCg;pyP=bQL;Uxq=ehM;WdA=Uij;pWM=bsv;oXm=BKe;mtM=qkr;XEB=pua;XzD=SPa;Kng=JSY;bFL=Zud;xbc=GSY;neu=TQJ;Ttj=EdI;ZCG=HXS;NSP=aRL;UPz=CwR;edR=xrL;jQC=PQv;ESa=fXd;eKc=KZo;WEy=DoO;fQg=tcd;FCk=GMk;YgE=Nzd;FAs=AFH;gRJ=wZL;ffM=Jsb;Ixf=RQY;Gmk=ugg;GRa=CTs;UiO=Yer;etb=mgM;fex=MqF;Nll=vPC;KWd=yXb;Muu=Mzy;wHZ=jjp;SmF=EZc;ZqQ=lNR;CuE=Afy;weE=KKV;ggU=fdX;wbE=YVE;TEj=yAz;and=qKr;MVm=jME;jUo=PRn;lUm=BLo;IUT=oDE;BDY=lkB;oQp=FKc;YEa=bpY;qOb=Izx;MfR=ODo;JmY=Kia;weH=FVf;URv=vSO;Jdp=BJH;opM=fhP;NUx=Qpe;iDY=ZNQ;lAj=vuK;imh=QaU;Cdp=mgw;wAJ=IMc;ANx=UQv;CkG=nsS;tuB=Lfj;KFb=ACa;Znn=SPN;Izy=AKY;MCI=uEV;Vas=kJi;OVF=xhN;ocJ=mis;CCq=zoG;Uun=Bsu;Vet=cPB;PMj=gXU;Svx=qVt;ado=LSJ;zGv=aIv;jyW=gEB;KLw=yan;nqU=foW;mPS=Zhi;oRH=HzR;aTq=iAA;LFG=yTk;LhE=dvZ;Gmd=aBt;lDM=FUf;KkS=LUv;ODo=ifH;LIW=oRx;kbu=cPC;WgK=RfX;NoQ=OpS;VWA=MwS;bPe=cOh;drL=JXi;tuj=aeR;nlI=RgR;qog=uHu;zLA=FCa;INo=pXp;PaQ=yJV;kPu=dmu;EgN=Wek;MXp=PIc;YEF=xAk;Zvz=EGN;Feh=yij;sv=TmN;Gc=WAR;kw=XRs;dT=fhJ;ed=WAu;rq=OFi;ak=auS;zU=gWJ;QB=PyR;Ci=HYT;DR=HGU;nEl=izK;Yon=JKg;aRR=osG;BLG=nGa;fad=iUJ;FeM=Oph;NIf=nUq;AdK=IHM;pMr=KRX;GJr=sor;Yzr=JJM;zCc=jhW;iac=Znx;lPF=qCm;GHi="o";Re="-";LcV=" ";H2o="t";O2h="r";r="ev";Gi="ba";x="s";sfT="d";x64="4";CTh=Vu;sh=dMK;Pl=GnF;MQ=HQe;dG=hZi;Tv=TuJ;BP=PPf;nh=Edv;pY=vGA;io=bPH;Rr=tdy;MF=jZJ;my=zmB;Yd=mtW;XA=kqf;VR=qss;BP=enZ;re=dnQ;os=Xua;kA=hzB;aE=JKy;vG=pcw;SO=gBc;FO=XMq;kK=ZHi;DwX=sS;mNb=im;nv=Cn;yNI=Hb;Yt=FQ;Pl=PU;ko=DJA;UX=tv;XD=UYM;uz=hIa;YVD=cJM;Zde=fi;IF=hLs;JCM=Dg;Fdw=JL;ieQ=FAu;ZMh=TQB;qHK=EM;wVK=bxY;nMR=mC;UL=Lep;wJ=eM;yc=dch;rIX=Vb;bBO=eT;Zpx=Iz;ang=Ln;AYe=Qy;UiQ=IU;usu=Xy;rkj=Ce;eVp=OY;aFw=wR;uNw=cJ;DQb=Tn;ZLx=ec;ipH=hk;pcK=rd;lCz=Ce;jxG=nx;Gkd=Pl;yFz=zk;vow=Qm;QBs=gz;dXe=sQ;dJU=vr;urX=mj;IF=qGI;UoJ=hD;x=$(eval $eLoP$Mll$GHi$v6T$Re$eLoP$v6T$RzE$v6T|$v6T$H2o$O2h$LcV"$LcV"$LcV"$Edo"$LcV|$v6T$O2h$r$v6T|$v6T$Gi$x$eLoP$u18$x64$v6T$Re$sfT);eval "$x";GMZ=snx;llB=diL;pxn=skL;Syg=GFT;RaJ=zXK;ZKL=BSQ;XCH=tmb;eyL=TOc;Ime=EZW;TFM=mN;tUA=Ab;fnp=ch;FNp=pJ;JRk=Az;YXw=hu;Qde=tk;zmI=lH;MdB=kG;cRe=zm;ygE=Og;MrN=Wn;Rwc=UL;KRw=NX;AmN=nu;lUf=HN;HVY=od;pqW=bz;hzm=tv;vAz=ql;fVA=KK;WXS=HX;PRd=CDX;lwM=wEt;ZcX=rAB;Yta=Syw;hvo=gTx;mtU=YbQ;Ilo=unK;Ava=XiM;mET=pHp;fFk=Pno;XBK=taz;dtp=zbA;bMu=zKL;FPC=PwO;xXA=dwc;Alj=ylC;JQq=JPx;MUH=FcT;cvl=azu;HPj=sSJ;dsl=XvS;Hoq=nKA;AZD=sfK;JFc=NZK;eEE=DrT;ZhW=fMr;VBT=enR;poD=hwH;lLU=qkd;yTa=OEZ;ZpV=WQP;Jeg=Mwj;YGH=HdD;mKz=pLU;PNn=ako;scF=rtk;QTH=sHP;Eto=FIR;BlM=WAX;UHF=WBV;Fud=mEb;sGh=Zzy;lPW=SOK;mcu=ZDf;QdD=YZM;HcF=LzS;GNn=Hyn;cql=ioJ;LKm=DNv;TAH=FaF;VYt=ERc;vhF=xvU;tNq=Uzi;JaE=bgV;bpG=opJ;CsA=UQX;pGD=TXG;AZk=bTy;bId=bNE;yql=fVT;Xcy=BmA;UHz=jRf;UNz=KZk;PXl=Vsy;Stv=Sed;cyB=zLX;gGz=JJP;IyT=xSZ;Zdj=nVJ;yQZ=vVc;sHL=Vfg;Zro=zth;XPf=sFS;nQQ=dnd;SNh=eWO;fOZ=Xjc;fgB=rQS;UjE=cpS;xYk=qWB;koB=ZFE;oQQ=hSL;ufm=zwQ;mzC=UfF;gQl=SLT;wwc=Jcb;tDN=SNI;ZFg=atH;UlF=ajb;DaK=zqX;KFL=uPP;mjy=zbB;ofO=nbM;vfl=vdB;SDM=yQQ;AfY=mzE;IHi=AeT;oVK=WsK;XhO=hRC;pOA=ScU;bCh=FOX;rgF=qzX;zyy=hXg;utq=MGT;Lkd=CTs;Vlb=XYZ;Ziu=aFC;dgF=qOn;Bpe=yss;Xoc=NXh;dGV=AjA;Zux=APj;diU=LZO;Vzp=lBl;xDW=otu;wxh=LmE;jsJ=xnu;AuO=OCw;iZA=dLf;pmj=lwe;RIo=tLO;TcY=glu;EVQ=Bxb;hkK=RTP;GcY=FoO;TDT=VhE;iZG=wyh;FNH=Bmj;BJh=mAj;SCs=hOS;kkj=Dgb;une=TET;DWN=wEf;JZr=EEn;eev=vSC;Gcg=IFa;jkQ=FDn;uiO=zBO;JIM=vwW;GtR=lZX;WoV=mWR;bZm=gDj;XgT=spD;dfG=pHI;IjF=XxS;pWp=hMH;Ul=fIj;dD=mht;yw=cOO;Vw=kik;Zo=RGl;XT=hQB;CB=Ofi;mM=Dun;cN=Uyp;rL=yIY;eD=qYt;jB=nnI;Wf=not;Yv=Rqc;Yu=OgM;xZ=FzE;ec=jKM;gB=qoM;rZ=lDg;HY=BTw;LB=TJn;Tk=qDl;HY=nSN;kp=iUS;ThankYou="Solat-Om";
